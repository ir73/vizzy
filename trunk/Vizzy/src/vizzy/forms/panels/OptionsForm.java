/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OptionsForm.java
 *
 * Created on 14.10.2009, 10:51:10
 */

package vizzy.forms.panels;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Rectangle;
import java.io.File;
import java.net.URI;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;
import vizzy.controller.VizzyController;
import vizzy.model.Conf;
import vizzy.model.SettingsModel;

/**
 *
 * @author sergeil
 */
public class OptionsForm extends javax.swing.JFrame {

    private static final Logger log = Logger.getLogger(OptionsForm.class);

    private VizzyController controller;
    private SettingsModel settings;
    private int menuIndex = -1;

    /** Creates new form OptionsForm */
    public OptionsForm(Rectangle rect, VizzyController controller, SettingsModel settings) {
        this.controller = controller;
        this.settings = settings;
        initComponents();
        initPositionAndSize(rect);
    }

    private void checkFlashDevelop() {
        boolean b = false;
        String text = jCustomASEditorTextFiled.getText();
        if (Conf.OSName.indexOf(Conf.OS_WINDOWS) > -1) {
            if (text != null
                    && text.indexOf("FlashDevelop") > -1) {
                b = true;
            }
        }
        jFlashDevelopIntegrLabel.setVisible(b);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ASEditorButtonGroup = new javax.swing.ButtonGroup();
        jPanelGeneral = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel3 = new javax.swing.JLabel();
        jFontSizeTextField = new javax.swing.JTextField();
        jFontComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jRestoreCheckBox = new javax.swing.JCheckBox();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        bgColorLabel = new javax.swing.JLabel();
        fontColorLabel = new javax.swing.JLabel();
        bgColorPanel = new javax.swing.JPanel();
        fontColorPanel = new javax.swing.JPanel();
        jPanelTraceOutput = new javax.swing.JPanel();
        jCheckBoxBuffer = new javax.swing.JCheckBox();
        jCheckBoxTraceAll = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxVerbose = new javax.swing.JCheckBox();
        jCheckBoxStatic = new javax.swing.JCheckBox();
        jPanelTraceParser = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jEnableClickCheckBox = new javax.swing.JCheckBox();
        jEnablePopupsCheckBox = new javax.swing.JCheckBox();
        jEnableVizzyTraceCheckBox = new javax.swing.JCheckBox();
        jEnableHighlightErrorsCheckBox = new javax.swing.JCheckBox();
        jLabelClickInfo = new javax.swing.JLabel();
        jLabelCodePopupInfo = new javax.swing.JLabel();
        jLabelVizzyTraceInfo = new javax.swing.JLabel();
        jPanelApplications = new javax.swing.JPanel();
        jLayeredPane6 = new javax.swing.JLayeredPane();
        jFlashDevelopIntegrLabel = new javax.swing.JLabel();
        jDefaultRadioButton = new javax.swing.JRadioButton();
        jCustomEditorRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jCustomASEditorTextFiled = new javax.swing.JTextField();
        jPanelLogFile = new javax.swing.JPanel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jUTFCheckBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jFlashLogTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jFreqTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jNumLinesTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jNumLinesEnabledCheckBox = new javax.swing.JCheckBox();
        jPanelUpdates = new javax.swing.JPanel();
        jVersionLabel = new javax.swing.JLabel();
        jUpdatesCheckBox = new javax.swing.JCheckBox();
        jCheckUpdatesButton = new javax.swing.JButton();
        jOKButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListMenu = new javax.swing.JList();
        jPanelContainer = new javax.swing.JPanel();

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Font"));

        jLabel3.setText("Font size:");
        jLabel3.setBounds(270, 20, 90, 14);
        jLayeredPane2.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jFontSizeTextField.setBounds(270, 40, 90, 23);
        jLayeredPane2.add(jFontSizeTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jFontComboBox.setModel(new DefaultComboBoxModel(settings.getFontNames()));
        jFontComboBox.setBounds(10, 40, 250, 23);
        jLayeredPane2.add(jFontComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setText("Font:");
        jLabel5.setBounds(10, 20, 250, 14);
        jLayeredPane2.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jRestoreCheckBox.setText("<html>Restore window on trace update if window minimized</html>");
        jRestoreCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRestoreCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLayeredPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("Colors"));

        bgColorLabel.setText("Background color:");
        bgColorLabel.setBounds(230, 20, 130, 15);
        jLayeredPane5.add(bgColorLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        fontColorLabel.setText("Font color: ");
        fontColorLabel.setBounds(10, 20, 130, 15);
        jLayeredPane5.add(fontColorLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        bgColorPanel.setBackground(new java.awt.Color(255, 255, 0));
        bgColorPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bgColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bgColorPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bgColorPanelMouseEntered(evt);
            }
        });

        org.jdesktop.layout.GroupLayout bgColorPanelLayout = new org.jdesktop.layout.GroupLayout(bgColorPanel);
        bgColorPanel.setLayout(bgColorPanelLayout);
        bgColorPanelLayout.setHorizontalGroup(
            bgColorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 18, Short.MAX_VALUE)
        );
        bgColorPanelLayout.setVerticalGroup(
            bgColorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 18, Short.MAX_VALUE)
        );

        bgColorPanel.setBounds(230, 40, 20, 20);
        jLayeredPane5.add(bgColorPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        fontColorPanel.setBackground(new java.awt.Color(255, 51, 51));
        fontColorPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fontColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fontColorPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fontColorPanelMouseEntered(evt);
            }
        });

        org.jdesktop.layout.GroupLayout fontColorPanelLayout = new org.jdesktop.layout.GroupLayout(fontColorPanel);
        fontColorPanel.setLayout(fontColorPanelLayout);
        fontColorPanelLayout.setHorizontalGroup(
            fontColorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 18, Short.MAX_VALUE)
        );
        fontColorPanelLayout.setVerticalGroup(
            fontColorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 18, Short.MAX_VALUE)
        );

        fontColorPanel.setBounds(10, 40, 20, 20);
        jLayeredPane5.add(fontColorPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout jPanelGeneralLayout = new org.jdesktop.layout.GroupLayout(jPanelGeneral);
        jPanelGeneral.setLayout(jPanelGeneralLayout);
        jPanelGeneralLayout.setHorizontalGroup(
            jPanelGeneralLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelGeneralLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLayeredPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .add(jLayeredPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jRestoreCheckBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 362, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelGeneralLayout.setVerticalGroup(
            jPanelGeneralLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .add(jRestoreCheckBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLayeredPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLayeredPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jCheckBoxBuffer.setText("<html>Buffer trace output. Use this if you trace really much which causes your CPU work with 100% load</html>");

        jCheckBoxTraceAll.setText("<html>Trace all executed methods. Warning: use with \"Buffer Trace Output\" only! (AS3 only)</html>");
        jCheckBoxTraceAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTraceAllActionPerformed(evt);
            }
        });

        jLabel7.setText("<html>You will need to restart your browser after changing these settings</html>");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jCheckBoxVerbose.setText("<html>Trace bytecode. Traces detailed information about SWF bytecode and runtime parsing. (AS3 only)</html>");
        jCheckBoxVerbose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxVerboseActionPerformed(evt);
            }
        });

        jCheckBoxStatic.setText("<html>Outputs information about functions, bytecode, memory used, etc. (AS3 only)</html>");
        jCheckBoxStatic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxStaticActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelTraceOutputLayout = new org.jdesktop.layout.GroupLayout(jPanelTraceOutput);
        jPanelTraceOutput.setLayout(jPanelTraceOutputLayout);
        jPanelTraceOutputLayout.setHorizontalGroup(
            jPanelTraceOutputLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelTraceOutputLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelTraceOutputLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jCheckBoxBuffer, 0, 0, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jCheckBoxTraceAll, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jCheckBoxStatic, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jCheckBoxVerbose, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 359, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanelTraceOutputLayout.setVerticalGroup(
            jPanelTraceOutputLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelTraceOutputLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxBuffer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jCheckBoxTraceAll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxVerbose, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jCheckBoxStatic, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Smart Trace Parser"));

        jEnableClickCheckBox.setText("<html>1. Open HTTP links on double click.<br>2. Open source files from stack traces on double click.</html>");
        jEnableClickCheckBox.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jEnableClickCheckBox.setBounds(10, 50, 330, 40);
        jLayeredPane1.add(jEnableClickCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jEnablePopupsCheckBox.setText("<html>Enable code popup when mouse is over the stack-trace source file</html>");
        jEnablePopupsCheckBox.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jEnablePopupsCheckBox.setBounds(10, 120, 330, 33);
        jLayeredPane1.add(jEnablePopupsCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jEnableVizzyTraceCheckBox.setText("<html>Connect VizzyTrace library</html>");
        jEnableVizzyTraceCheckBox.setToolTipText("Parses VizzyTrace library debug information. See more information in product wiki page.");
        jEnableVizzyTraceCheckBox.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jEnableVizzyTraceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEnableVizzyTraceCheckBoxActionPerformed(evt);
            }
        });
        jEnableVizzyTraceCheckBox.setBounds(10, 200, 330, 23);
        jLayeredPane1.add(jEnableVizzyTraceCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jEnableHighlightErrorsCheckBox.setText("Highlight thrown errors from stack traces");
        jEnableHighlightErrorsCheckBox.setBounds(10, 20, 330, 23);
        jLayeredPane1.add(jEnableHighlightErrorsCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabelClickInfo.setText("<html>(<a href=\"http://code.google.com/p/flash-tracer/wiki/Features#HTTP_Links_are_Clickable_(since_2.3)\">what's this?</a>)</html>");
        jLabelClickInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelClickInfoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jFlashDevelopIntegrLabelMouseEntered(evt);
            }
        });
        jLabelClickInfo.setBounds(30, 95, 210, 16);
        jLayeredPane1.add(jLabelClickInfo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabelCodePopupInfo.setText("<html>(<a href=\"http://code.google.com/p/flash-tracer/wiki/Features#Explore_Source_Code_(since_2.3)\">what's this?</a>)</html>");
        jLabelCodePopupInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCodePopupInfoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jFlashDevelopIntegrLabelMouseEntered(evt);
            }
        });
        jLabelCodePopupInfo.setBounds(30, 158, 290, 16);
        jLayeredPane1.add(jLabelCodePopupInfo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabelVizzyTraceInfo.setText("<html>(<a href=\"http://code.google.com/p/flash-tracer/wiki/VizzyTrace\">what's this?</a>)</html>");
        jLabelVizzyTraceInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelVizzyTraceInfoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jFlashDevelopIntegrLabelMouseEntered(evt);
            }
        });
        jLabelVizzyTraceInfo.setBounds(30, 230, 310, 16);
        jLayeredPane1.add(jLabelVizzyTraceInfo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout jPanelTraceParserLayout = new org.jdesktop.layout.GroupLayout(jPanelTraceParser);
        jPanelTraceParser.setLayout(jPanelTraceParserLayout);
        jPanelTraceParserLayout.setHorizontalGroup(
            jPanelTraceParserLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelTraceParserLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLayeredPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTraceParserLayout.setVerticalGroup(
            jPanelTraceParserLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelTraceParserLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLayeredPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPane6.setBorder(javax.swing.BorderFactory.createTitledBorder("Actionscript Editor"));

        jFlashDevelopIntegrLabel.setText("<html>Check out FlashDevelop Vizzy Plugin for better integration. <a href=\"http://code.google.com/p/flash-tracer/wiki/FlashDevelopPlugin\">Read more...</a></html>");
        jFlashDevelopIntegrLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jFlashDevelopIntegrLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFlashDevelopIntegrLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jFlashDevelopIntegrLabelMouseEntered(evt);
            }
        });
        jFlashDevelopIntegrLabel.setBounds(30, 95, 310, 33);
        jLayeredPane6.add(jFlashDevelopIntegrLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ASEditorButtonGroup.add(jDefaultRadioButton);
        jDefaultRadioButton.setText("Default application");
        jDefaultRadioButton.setBounds(10, 40, 320, 23);
        jLayeredPane6.add(jDefaultRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ASEditorButtonGroup.add(jCustomEditorRadioButton);
        jCustomEditorRadioButton.setText(" ");
        jCustomEditorRadioButton.setBounds(10, 65, 25, 23);
        jLayeredPane6.add(jCustomEditorRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("Open source files with:");
        jLabel2.setBounds(10, 20, 340, 15);
        jLayeredPane6.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jCustomASEditorTextFiled.setToolTipText("<html>%file% - full path to the file<br>%line%  - line number\n</html>");
        jCustomASEditorTextFiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCustomASEditorTextFiledKeyReleased(evt);
            }
        });
        jCustomASEditorTextFiled.setBounds(42, 65, 300, 23);
        jLayeredPane6.add(jCustomASEditorTextFiled, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout jPanelApplicationsLayout = new org.jdesktop.layout.GroupLayout(jPanelApplications);
        jPanelApplications.setLayout(jPanelApplicationsLayout);
        jPanelApplicationsLayout.setHorizontalGroup(
            jPanelApplicationsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelApplicationsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLayeredPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelApplicationsLayout.setVerticalGroup(
            jPanelApplicationsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelApplicationsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLayeredPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Log file"));

        jUTFCheckBox.setText("read file as UTF-8");
        jUTFCheckBox.setBounds(190, 16, 170, 20);
        jLayeredPane3.add(jUTFCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setText("flash log location:");
        jLabel4.setBounds(10, 20, 180, 14);
        jLayeredPane3.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jFlashLogTextField.setBounds(10, 40, 230, 23);
        jLayeredPane3.add(jFlashLogTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setText("Log file read frequency (in milliseconds):");
        jLabel1.setBounds(10, 70, 350, 14);
        jLayeredPane3.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jFreqTextField.setText("1000");
        jFreqTextField.setBounds(10, 90, 170, 23);
        jLayeredPane3.add(jFreqTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Browse...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonClicked(evt);
            }
        });
        jButton1.setBounds(250, 40, 110, 23);
        jLayeredPane3.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Limit"));
        jNumLinesTextField.setBounds(10, 140, 170, 23);
        jLayeredPane4.add(jNumLinesTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setText("Max amount of bytes to load from end of file:");
        jLabel8.setBounds(10, 120, 350, 14);
        jLayeredPane4.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel11.setText("<html>This is usually required when the log file gets too big and that might cause slower performance. Setting this limit is not mandatory because Vizzy will set this automatically if runs out of memory.</html>");
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel11.setBounds(10, 40, 350, 70);
        jLayeredPane4.add(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jNumLinesEnabledCheckBox.setText("Load limited amount of bytes from the end of file only");
        jNumLinesEnabledCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jNumLinesEnabledCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jNumLinesEnabledCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNumLinesEnabledCheckBoxActionPerformed(evt);
            }
        });
        jNumLinesEnabledCheckBox.setBounds(10, 20, 350, 15);
        jLayeredPane4.add(jNumLinesEnabledCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout jPanelLogFileLayout = new org.jdesktop.layout.GroupLayout(jPanelLogFile);
        jPanelLogFile.setLayout(jPanelLogFileLayout);
        jPanelLogFileLayout.setHorizontalGroup(
            jPanelLogFileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelLogFileLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelLogFileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLayeredPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLayeredPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelLogFileLayout.setVerticalGroup(
            jPanelLogFileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelLogFileLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLayeredPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLayeredPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jVersionLabel.setText("Current version is: 1.19");

        jUpdatesCheckBox.setSelected(true);
        jUpdatesCheckBox.setText("Check for updates weekly at startup");
        jUpdatesCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jUpdatesCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCheckUpdatesButton.setText("Check now");
        jCheckUpdatesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckUpdatesButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelUpdatesLayout = new org.jdesktop.layout.GroupLayout(jPanelUpdates);
        jPanelUpdates.setLayout(jPanelUpdatesLayout);
        jPanelUpdatesLayout.setHorizontalGroup(
            jPanelUpdatesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelUpdatesLayout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanelUpdatesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jCheckUpdatesButton)
                    .add(jUpdatesCheckBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 353, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jVersionLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanelUpdatesLayout.setVerticalGroup(
            jPanelUpdatesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelUpdatesLayout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jUpdatesCheckBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jVersionLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckUpdatesButton)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Options");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jOKButton.setText("OK");
        jOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelClicked(evt);
            }
        });

        jListMenu.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "General", "Log", "Trace Output", "Trace Parser", "Applications", "Updates" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListMenu.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jListMenu.setFixedCellHeight(35);
        jListMenu.setSelectedIndex(0);
        jListMenu.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListMenuValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListMenu);

        jPanelContainer.setLayout(new javax.swing.BoxLayout(jPanelContainer, javax.swing.BoxLayout.LINE_AXIS));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(161, 161, 161)
                        .add(jOKButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanelContainer, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .add(jPanelContainer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 346, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton2)
                    .add(jOKButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jNumLinesEnabledCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNumLinesEnabledCheckBoxActionPerformed
        if (jNumLinesEnabledCheckBox.isSelected()) {
            long n = Long.parseLong(jNumLinesTextField.getText());
            if (n == 0) {
                jNumLinesTextField.setText("1000");
            }
        }
        jNumLinesTextField.setEnabled(jNumLinesEnabledCheckBox.isSelected());
}//GEN-LAST:event_jNumLinesEnabledCheckBoxActionPerformed

    private void jOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKButtonActionPerformed
        okOptions();
    }//GEN-LAST:event_jOKButtonActionPerformed

    private void browseButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonClicked
        File openFile = new File(jFlashLogTextField.getText());
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setSelectedFile(openFile);
        while (true) {
            int choice = fileChooser.showOpenDialog(this);
            if (choice == JFileChooser.APPROVE_OPTION) {
                openFile = fileChooser.getSelectedFile();
                jFlashLogTextField.setText(openFile.getAbsolutePath());
                break;
            } else {
                break;
            }
        }
    }//GEN-LAST:event_browseButtonClicked

    private void cancelClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelClicked
        cancelOptions();
    }//GEN-LAST:event_cancelClicked

    private void jCheckBoxTraceAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTraceAllActionPerformed
        if (jCheckBoxTraceAll.isSelected()) {
            jCheckBoxBuffer.setSelected(true);
        }
    }//GEN-LAST:event_jCheckBoxTraceAllActionPerformed

    private void jCheckBoxVerboseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxVerboseActionPerformed
        if (jCheckBoxVerbose.isSelected()) {
            jCheckBoxBuffer.setSelected(true);
        }
    }//GEN-LAST:event_jCheckBoxVerboseActionPerformed

    private void jCheckBoxStaticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxStaticActionPerformed
        if (jCheckBoxStatic.isSelected()) {
            jCheckBoxBuffer.setSelected(true);
        }
    }//GEN-LAST:event_jCheckBoxStaticActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cancelOptions();
    }//GEN-LAST:event_formWindowClosing

    private void jCheckUpdatesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckUpdatesButtonActionPerformed
        controller.checkForUpdatesClicked();
    }//GEN-LAST:event_jCheckUpdatesButtonActionPerformed

    private void jFlashDevelopIntegrLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFlashDevelopIntegrLabelMouseClicked
        try {
            if (Desktop.isDesktopSupported())
                Desktop.getDesktop().browse(new URI(Conf.URL_VIZZY_PLUGIN));
        } catch (Exception ex1) {
//            log.warn("websiteClicked() error", ex1);
        }
    }//GEN-LAST:event_jFlashDevelopIntegrLabelMouseClicked

    private void jFlashDevelopIntegrLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFlashDevelopIntegrLabelMouseEntered
        evt.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jFlashDevelopIntegrLabelMouseEntered

    private void jCustomASEditorTextFiledKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCustomASEditorTextFiledKeyReleased
        checkFlashDevelop();
    }//GEN-LAST:event_jCustomASEditorTextFiledKeyReleased

    private void bgColorPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgColorPanelMouseEntered
        evt.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_bgColorPanelMouseEntered

    private void fontColorPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fontColorPanelMouseEntered
        evt.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_fontColorPanelMouseEntered

    private void fontColorPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fontColorPanelMouseClicked
        Color color = JColorChooser.showDialog(this, "Font Color", fontColorPanel.getBackground());
        fontColorPanel.setBackground(color);
    }//GEN-LAST:event_fontColorPanelMouseClicked

    private void bgColorPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgColorPanelMouseClicked
        Color color = JColorChooser.showDialog(this, "Background Color", bgColorPanel.getBackground());
        bgColorPanel.setBackground(color);
    }//GEN-LAST:event_bgColorPanelMouseClicked

    private void jEnableVizzyTraceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEnableVizzyTraceCheckBoxActionPerformed
        if (jEnableVizzyTraceCheckBox.isSelected()) {
            JOptionPane.showMessageDialog(null, "This feature might require plenty of\n"
                    + "processor resources, so Vizzy has set load file\n"
                    + "limit to 50,000. You can change it according to\n"
                    + "your needs.", "Warning", JOptionPane.WARNING_MESSAGE);
            jNumLinesEnabledCheckBox.setSelected(true);
            jNumLinesTextField.setText("50000");
            jNumLinesTextField.setEnabled(true);
        }
    }//GEN-LAST:event_jEnableVizzyTraceCheckBoxActionPerformed

    private void jLabelVizzyTraceInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVizzyTraceInfoMouseClicked
        try {
            if (Desktop.isDesktopSupported())
                Desktop.getDesktop().browse(new URI(Conf.URL_VIZZY_WIKI_TRACE));
        } catch (Exception ex1) {
//            log.warn("websiteClicked() error", ex1);
        }
    }//GEN-LAST:event_jLabelVizzyTraceInfoMouseClicked

    private void jLabelCodePopupInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCodePopupInfoMouseClicked
        try {
            if (Desktop.isDesktopSupported())
                Desktop.getDesktop().browse(new URI(Conf.URL_VIZZY_WIKI_CODE_POPUP));
        } catch (Exception ex1) {
//            log.warn("websiteClicked() error", ex1);
        }
    }//GEN-LAST:event_jLabelCodePopupInfoMouseClicked

    private void jLabelClickInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelClickInfoMouseClicked
        try {
            if (Desktop.isDesktopSupported())
                Desktop.getDesktop().browse(new URI(Conf.URL_VIZZY_WIKI_CLICKABLE));
        } catch (Exception ex1) {
//            log.warn("websiteClicked() error", ex1);
        }
    }//GEN-LAST:event_jLabelClickInfoMouseClicked

    private void jListMenuValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListMenuValueChanged
        int selectedIndex = jListMenu.getSelectedIndex();
        loadMenuTab(selectedIndex);
    }//GEN-LAST:event_jListMenuValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ASEditorButtonGroup;
    private javax.swing.JLabel bgColorLabel;
    private javax.swing.JPanel bgColorPanel;
    private javax.swing.JLabel fontColorLabel;
    private javax.swing.JPanel fontColorPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBoxBuffer;
    private javax.swing.JCheckBox jCheckBoxStatic;
    private javax.swing.JCheckBox jCheckBoxTraceAll;
    private javax.swing.JCheckBox jCheckBoxVerbose;
    private javax.swing.JButton jCheckUpdatesButton;
    private javax.swing.JTextField jCustomASEditorTextFiled;
    private javax.swing.JRadioButton jCustomEditorRadioButton;
    private javax.swing.JRadioButton jDefaultRadioButton;
    private javax.swing.JCheckBox jEnableClickCheckBox;
    private javax.swing.JCheckBox jEnableHighlightErrorsCheckBox;
    private javax.swing.JCheckBox jEnablePopupsCheckBox;
    private javax.swing.JCheckBox jEnableVizzyTraceCheckBox;
    private javax.swing.JLabel jFlashDevelopIntegrLabel;
    private javax.swing.JTextField jFlashLogTextField;
    private javax.swing.JComboBox jFontComboBox;
    private javax.swing.JTextField jFontSizeTextField;
    private javax.swing.JTextField jFreqTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelClickInfo;
    private javax.swing.JLabel jLabelCodePopupInfo;
    private javax.swing.JLabel jLabelVizzyTraceInfo;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JLayeredPane jLayeredPane6;
    private javax.swing.JList jListMenu;
    private javax.swing.JCheckBox jNumLinesEnabledCheckBox;
    private javax.swing.JTextField jNumLinesTextField;
    private javax.swing.JButton jOKButton;
    private javax.swing.JPanel jPanelApplications;
    private javax.swing.JPanel jPanelContainer;
    private javax.swing.JPanel jPanelGeneral;
    private javax.swing.JPanel jPanelLogFile;
    private javax.swing.JPanel jPanelTraceOutput;
    private javax.swing.JPanel jPanelTraceParser;
    private javax.swing.JPanel jPanelUpdates;
    private javax.swing.JCheckBox jRestoreCheckBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jUTFCheckBox;
    private javax.swing.JCheckBox jUpdatesCheckBox;
    private javax.swing.JLabel jVersionLabel;
    // End of variables declaration//GEN-END:variables

    private void okOptions() {

        HashMap<String, String> m = new HashMap<String, String>();
        m.put("TraceOutputBuffered", jCheckBoxBuffer.isSelected() ? "1" : "0");
        m.put("AS3Trace", jCheckBoxTraceAll.isSelected() ? "1" : "0");
        m.put("AS3StaticProfile", jCheckBoxStatic.isSelected() ? "1" : "0");
        m.put("AS3Verbose", jCheckBoxVerbose.isSelected() ? "1" : "0");
        

        SettingsModel s = new SettingsModel();
        s.setTraceFont((String)jFontComboBox.getSelectedItem(), jFontSizeTextField.getText(), false);
        s.setFlashLogFileName(jFlashLogTextField.getText(), false);
        s.setCheckUpdates(jUpdatesCheckBox.isSelected(), false);
        s.setMaxNumLinesEnabled(jNumLinesEnabledCheckBox.isSelected(), false);
        s.setMaxNumLines(jNumLinesTextField.getText(), false);
        s.setUTF(jUTFCheckBox.isSelected(), false);
        s.setRefreshFreq(jFreqTextField.getText(), false);
        s.setRestoreOnUpdate(jRestoreCheckBox.isSelected(), false);
        s.setHighlightStackTraceErrors(jEnableHighlightErrorsCheckBox.isSelected(), false);
        s.setCustomASEditor(jCustomASEditorTextFiled.getText(), false);
        s.setDefaultASEditor(jDefaultRadioButton.isSelected(), false);
        s.setEnableCodePopup(jEnablePopupsCheckBox.isSelected(), false);
        s.setEnableTraceClick(jEnableClickCheckBox.isSelected(), false);
        s.setBgColor(bgColorPanel.getBackground(), false);
        s.setFontColor(fontColorPanel.getBackground(), false);
        s.setEnableParsingSourceLines(jEnableVizzyTraceCheckBox.isSelected(), false);

        controller.optionsOK(s, m);
    }

    private void initVars() {
        jUTFCheckBox.setSelected(settings.isUTF());
        jUpdatesCheckBox.setSelected(settings.isCheckUpdates());
        jNumLinesEnabledCheckBox.setSelected(settings.isMaxNumLinesEnabled());
        jNumLinesTextField.setText(String.valueOf(settings.getMaxNumLines()));
        jRestoreCheckBox.setSelected(settings.isRestoreOnUpdate());

        jFontComboBox.setSelectedItem(settings.getTraceFont().getName());
        jFontSizeTextField.setText(String.valueOf(settings.getTraceFont().getSize()));
        jFlashLogTextField.setText(settings.getFlashLogFileName());
        jFreqTextField.setText(String.valueOf(settings.getRefreshFreq()));
        jVersionLabel.setText("Current version is: " + Conf.VERSION);
        jNumLinesTextField.setEnabled(jNumLinesEnabledCheckBox.isSelected());
        jCheckBoxBuffer.setSelected(settings.getMmcfgKeys().get("TraceOutputBuffered", "0").equals("1"));
        jCheckBoxTraceAll.setSelected(settings.getMmcfgKeys().get("AS3Trace", "0").equals("1"));
        jCheckBoxVerbose.setSelected(settings.getMmcfgKeys().get("AS3Verbose", "0").equals("1"));
        jCheckBoxStatic.setSelected(settings.getMmcfgKeys().get("AS3StaticProfile", "0").equals("1"));
        jEnableHighlightErrorsCheckBox.setSelected(settings.isHighlightStackTraceErrors());
        jCustomASEditorTextFiled.setText(settings.getCustomASEditor());
        jEnableClickCheckBox.setSelected(settings.isEnableTraceClick());
        jEnablePopupsCheckBox.setSelected(settings.isEnableCodePopup());
        jEnableVizzyTraceCheckBox.setSelected(settings.isEnableParsingSourceLines());
        fontColorPanel.setBackground(settings.getFontColor());
        bgColorPanel.setBackground(settings.getBgColor());
        if (settings.isDefaultASEditor()) {
            jDefaultRadioButton.setSelected(true);
        } else {
            jCustomEditorRadioButton.setSelected(true);
        }

        checkFlashDevelop();

        loadMenuTab(0);
    }

    @Override
    public void setVisible(boolean val) {
        if (val) {
            initVars();
        }
        super.setVisible(val);
    }

    @Override
    public void dispose() {
        settings = null;
        controller = null;
        super.dispose();
    }

    

    private void initPositionAndSize(Rectangle rect) {
        try {
            this.setIconImage(settings.getAppIcon());
        } catch (Exception e) {
//            log.warn("initPositionAndSize() ", e);
        }

        int x = (int)(rect.getX() + rect.getWidth() / 2 - getWidth( )/ 2);
        int y = (int)(rect.getY() + rect.getHeight() / 2 - getHeight()/ 2);
        setLocation(x, y);
    }

    private void cancelOptions() {
        controller.optionsCancelled();
    }

    private void loadMenuTab(int selectedIndex) {
        if (jPanelContainer.getComponentCount() > 0 && selectedIndex == menuIndex) {
            return;
        }
        jPanelContainer.removeAll();
        switch (selectedIndex) {
            case 0:
                jPanelContainer.add(jPanelGeneral);
                break;
            case 1:
                jPanelContainer.add(jPanelLogFile);
                break;
            case 2:
                jPanelContainer.add(jPanelTraceOutput);
                break;
            case 3:
                jPanelContainer.add(jPanelTraceParser);
                break;
            case 4:
                jPanelContainer.add(jPanelApplications);
                break;
            case 5:
                jPanelContainer.add(jPanelUpdates);
                break;
        }
        menuIndex = selectedIndex;
        jPanelContainer.validate();
        jPanelContainer.repaint();
    }

}
