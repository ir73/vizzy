log4j.rootCategory=debug, stdout
# log4j.rootCategory=warn, stdout, rolling, socketLogger, lf5, xml, lf5Rolling

# Example of adding a specific package/class at a different
# logging level...
# --log everything in the com.johnmunsch package at debug level
#   ..even better, send it to a different appender.  Note, however, that
#   this doesn't mean that any loggers from a lower level won't be used:
#   everything still inherits, so this new logger is used _in_addition_to_
#   the loggers it would have otherwise already used.
#log4j.category.com.johnmunsch=debug, socketLogger

# --on the other hand, everything in the
#   com.johnmunsch.stuff class _shouldn't_ log
#   unless the log message is at 'warn' level or worse.
#   (It just so happens that stuff generates a _lot_ of
#   logging when it's used)
log4j.category.com.vizzy=debug

# --also, it just so happens that we have a different
#   appender that we're using that we want to have
#   log information from a specific location, and we
#   don't want to send that information anywhere else.
#log4j.category.com.johnmunsch.otherstuff=warn, xml
#log4j.additivity.com.johnmunsch.otherstuff=false

# BEGIN APPENDER: CONSOLE APPENDER (stdout)
#  first:  type of appender (fully qualified class name)
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

#  second: Any configuration information needed for that appender.
#    Many appenders require a layout.
log4j.appender.stdout.layout=org.apache.log4j.TTCCLayout
# log4j.appender.stdout.layout=org.apache.log4j.SimpleLayout

# Possible information overload?
# log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#  additionally, some layouts can take additional information --
#    like the ConversionPattern for the PatternLayout.
# log4j.appender.stdout.layout.ConversionPattern=%d %-5p %-17c{2} (%30F:%L) %3x - %m%n
# END APPENDER: CONSOLE APPENDER (stdout)

# BEGIN APPENDER: ROLLING FILE APPENDER (rolling)
#  first:  type of appender (fully qualified class name)
log4j.appender.rolling=org.apache.log4j.RollingFileAppender

#  second: Any configuration information needed for that appender.
#    Many appenders require a layout.
log4j.appender.rolling.File=log/vizzy.log

log4j.appender.rolling.MaxFileSize=100KB
#  Keep one backup file
log4j.appender.rolling.MaxBackupIndex=1

log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.rolling.layout.ConversionPattern=%p %t %c - %m%n

# Possible information overload?
# log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#  additionally, some layouts can take additional information --
#    like the ConversionPattern for the PatternLayout.
# log4j.appender.stdout.layout.ConversionPattern=%d %-5p %-17c{2} (%30F:%L) %3x - %m%n
# END APPENDER: ROLLING FILE APPENDER (rolling)